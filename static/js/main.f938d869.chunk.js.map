{"version":3,"sources":["components/MainPage.module.css","App.module.css","components/KeyInput.module.css","components/AuctionPage.module.css","components/GraphPage.module.css","components/KeyInput.js","components/LoginPage.js","components/GraphPage.js","components/ItemCard.js","components/ItemCardGraphs.js","components/MainPage.js","components/AuctionCard.js","components/scripts/ColorCodeConverter.js","components/AuctionPage.js","App.js","reportWebVitals.js","index.js","components/AuctionCard.module.css","components/ItemCard.module.css","components/ItemCardGraphs.module.css","components/LoginPage.module.css"],"names":["module","exports","TitleHeader","ProductDisplay","App","appTitle","keyinput","AuctionCards","container","title","miniContainer","graph","KeyInput","react_default","a","createElement","type","id","className","styles","LoginPage","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","KeyPrompt","components_KeyInput","Button","variant","onClick","handleSubmitClick","errorMessage","React","Component","GraphPage","_this","viewGraphs","DataFormater","number","toString","productBuyData","await_response","productBuyMovingData","productSellData","productSellMovingData","productBuyDataArray","productBuyMovingDataArray","productSellDataArray","productSellMovingDataArray","fillDataArrayBuyPrice","data","keys","forEach","key","push","time","value","undefined","graphBuyPrice","LineChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","YAxis","tickFormatter","Tooltip","Line","dataKey","stroke","fillDataArrayBuyMoving","graphBuyMovement","fillDataArraySellPrice","graphSellPrice","fillDataArraySellMoving","graphSellMovement","getDataForProduct","product","requestedData","database","getDatabase","state","app","console","log","dbref","ref","get","child","then","snapshot","exists","val","catch","error","databaseapp","requested_data","response","callback","graphs","_this2","setState","_this3","_this4","_this5","ItemCardGraphs","datafunc","databasefunction","GraphContainer","components_GraphPage","ItemCard","ItemCardInfo","ItemCardTitle","ItemCardPrice","price","replace","MainPage","callFuncs","displayProducts","setCardDataBase","assertThisInitialized","newProductCards","fetch","json","products","i","buyPrice","JSON","parse","stringify","sellPrice","buyMovingWeek","sellMovingWeek","profitPerMinute","Math","min","round","components_ItemCardGraphs","sort","b","parseFloat","ErrorMessage","productCards","cards","length","card","updateDatabase","currentTime","Date","currentTimeString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","set","graphPage","graphsShown","ApiKey","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","dataBaseURL","setTimeout","setInterval","AuctionCard","showMore","itemInfo","ItemInfo","dangerouslySetInnerHTML","__html","itemLore","navigator","clipboard","writeText","uuid","hideMore","ItemName","itemName","ItemPrice","itemPrice","itemProfit","itemPotentialProfit","currId","obfuscators","alreadyParsed","styleMap","§0","§1","§2","§3","§4","§5","§6","§7","§8","§9","§a","§b","§c","§d","§e","§f","§l","§m","§n","§o","obfuscate","elem","string","multiMagic","currNode","listLen","nodeI","replaceRand","max","randChar","String","fromCharCode","floor","random","substr","initMagic","el","str","obsStr","innerHTML","strLen","window","indexOf","childNodes","nodeType","document","nodeValue","replaceChild","applyCode","codes","obfuscated","code","style","cssText","mineParse","input","parsed","contains","interval","clearInterval","indexDelta","strSlice","finalPre","match","codesLen","indexes","apply","appendChild","substring","lastIndexOf","slice","parseStyle","raw","AuctionPage","submitClick","getElementById","components_LoginPage","concat","displayAuctionCards","auctionCards","enchantNames","EnchantNames","self","auctions","auction","itemLoreEncoded","isBin","rarity","enchantments","j","enchantment","includes","enchantmentLevel","split","averagePriceEnchantments","bookData","averagePriceItemName","itemData","tax","potentialProfit","components_AuctionCard","e","apikey","index","myLoop","databaseRef","prices","averagePrice","reduce","bookDatas","CurrentEnchantPrices","allPricesEnchants","map","_ref","enchantsPrice","fillEnchantPricesArray","activateBazaar","page","components_MainPage","buttons","activateAuction","components_AuctionPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f938d869.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleHeader\":\"MainPage_TitleHeader__HyfYp\",\"ProductDisplay\":\"MainPage_ProductDisplay__zy-Vw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1AEOP\",\"appTitle\":\"App_appTitle__3mfOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyinput\":\"KeyInput_keyinput__TGvsj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuctionCards\":\"AuctionPage_AuctionCards__327Ra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GraphPage_container__3UzYH\",\"title\":\"GraphPage_title__2E880\",\"miniContainer\":\"GraphPage_miniContainer__2wZ1h\",\"graph\":\"GraphPage_graph__3_o_D\"};","import React from \"react\";\r\nimport styles from './KeyInput.module.css';\r\n\r\nfunction KeyInput(){\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" id=\"ApiKey\" className={styles.KeyInput}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KeyInput;","import KeyInput from \"./KeyInput\";\r\nimport Button from \"@mui/material/Button\";\r\nimport React from \"react\";\r\nimport styles from \"./LoginPage.module.css\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.LoginPage}>\r\n        <p className={styles.KeyPrompt}>Please enter your API Key.</p>\r\n        <KeyInput />\r\n        <Button variant=\"contained\" onClick={this.props.handleSubmitClick}>Submit</Button>\r\n        <p className=\"error_message\">{this.props.errorMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from \"recharts\";\r\nimport { getDatabase, ref, set, get, child } from \"firebase/database\";\r\nimport React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport styles from \"./GraphPage.module.css\";\r\n\r\nclass GraphPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            app: this.props.databaseapp,\r\n            graphBuyPrice: undefined,\r\n            graphSellPrice: undefined,\r\n            graphBuyMovement: undefined,\r\n            graphSellMovement: undefined,\r\n        }\r\n    }\r\n\r\n    async await_response(product, requested_data) {\r\n        let response = await this.getDataForProduct(product, requested_data);\r\n        return response;\r\n      }\r\n    \r\n    \r\n      viewGraphs = () => {\r\n        const DataFormater = (number) => {\r\n            if(number > 1000000000){\r\n              return (number/1000000000).toString() + 'B';\r\n            }else if(number > 1000000){\r\n              return (number/1000000).toString() + 'M';\r\n            }else if(number > 1000){\r\n              return (number/1000).toString() + 'K';\r\n            }else{\r\n              return number.toString();\r\n            }\r\n          }\r\n        let productBuyData = this.await_response(\r\n          this.props.title,\r\n          \"buyPricePerUnit\"\r\n        );\r\n        let productBuyMovingData = this.await_response(\r\n            this.props.title,\r\n            \"buyMovingWeek\"\r\n        );\r\n        let productSellData = this.await_response(\r\n            this.props.title,\r\n            \"sellPricePerUnit\"\r\n        );\r\n        let productSellMovingData = this.await_response(\r\n            this.props.title,\r\n            \"sellMovingWeek\"\r\n        );\r\n    \r\n        let productBuyDataArray = [];\r\n        let productBuyMovingDataArray = [];\r\n        let productSellDataArray = [];\r\n        let productSellMovingDataArray = [];\r\n        this.fillDataArrayBuyPrice(function (data) {\r\n          Object.keys(data).forEach((key) => {\r\n            productBuyDataArray.push({\r\n              time: key,\r\n              value: data[key],\r\n            });\r\n          }\r\n          );\r\n          if (productBuyDataArray !== undefined) {\r\n            \r\n            return ({\r\n              graphBuyPrice: (\r\n                <div className={styles.miniContainer}>\r\n                <p className={styles.title}>Buy Price</p>\r\n                <LineChart\r\n                  width={500}\r\n                  height={250}\r\n                  className={styles.graph}\r\n                  data={productBuyDataArray}\r\n                  margin={{\r\n                    top: 15,\r\n                    right: 30,\r\n                    left: 20,\r\n                    bottom: 5,\r\n                  }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <YAxis tickFormatter={DataFormater}/>\r\n                  <Tooltip/>\r\n                  <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n                </LineChart>\r\n                </div>\r\n              ),\r\n            });\r\n          }\r\n          else {\r\n            return ({\r\n              graphBuyPrice: <div>Loading...</div>,\r\n            });\r\n          }\r\n        }, productBuyData);\r\n\r\n        this.fillDataArrayBuyMoving(function (data) {\r\n            Object.keys(data).forEach((key) => {\r\n              productBuyMovingDataArray.push({\r\n                time: key,\r\n                value: data[key],\r\n              });\r\n            }\r\n            );\r\n            if (productBuyMovingDataArray !== undefined) {\r\n              \r\n              return ({\r\n                graphBuyMovement: (\r\n                    <div className={styles.miniContainer}>\r\n                <p className={styles.title}>Buy Movement</p>\r\n                  <LineChart\r\n                    width={500}\r\n                    height={250}\r\n                    className={styles.graph}\r\n                    data={productBuyMovingDataArray}\r\n                    margin={{\r\n                      top: 15,\r\n                      right: 30,\r\n                      left: 20,\r\n                      bottom: 5,\r\n                    }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <YAxis tickFormatter={DataFormater}/>\r\n                    <Tooltip/>\r\n                    <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n                  </LineChart>\r\n                  </div>\r\n                ),\r\n              });\r\n            }\r\n            else {\r\n              return ({\r\n                graphBuyMovement: <div>Loading...</div>,\r\n              });\r\n            }\r\n          }, productBuyMovingData);\r\n        \r\n          this.fillDataArraySellPrice(function (data) {\r\n            Object.keys(data).forEach((key) => {\r\n              productSellDataArray.push({\r\n                time: key,\r\n                value: data[key],\r\n              });\r\n            }\r\n            );\r\n            if (productSellDataArray !== undefined) {\r\n              \r\n              return ({\r\n                graphSellPrice: (\r\n                    <div className={styles.miniContainer}>\r\n                <p className={styles.title}>Sell Price</p>\r\n                  <LineChart\r\n                    width={500}\r\n                    height={250}\r\n                    className={styles.graph}\r\n                    data={productSellDataArray}\r\n                    margin={{\r\n                      top: 15,\r\n                      right: 30,\r\n                      left: 20,\r\n                      bottom: 5,\r\n                    }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <YAxis tickFormatter={DataFormater}/>\r\n                    <Tooltip/>\r\n                    <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n                  </LineChart>\r\n                    </div>\r\n                ),\r\n              });\r\n            }\r\n            else {\r\n              return ({\r\n                graphSellPrice: <div>Loading...</div>,\r\n              });\r\n            }\r\n          }, productSellData);\r\n          \r\n          this.fillDataArraySellMoving(function (data) {\r\n            Object.keys(data).forEach((key) => {\r\n              productSellMovingDataArray.push({\r\n                time: key,\r\n                value: data[key],\r\n              });\r\n            }\r\n            );\r\n            if (productSellMovingDataArray !== undefined) {\r\n              \r\n              return ({\r\n                graphSellMovement: (\r\n                    <div className={styles.miniContainer}>\r\n                    <p className={styles.title}>Sell Movement</p>\r\n                  <LineChart\r\n                    width={500}\r\n                    height={250}\r\n                    className={styles.graph}\r\n                    data={productSellMovingDataArray}\r\n                    margin={{\r\n                      top: 15,\r\n                      right: 30,\r\n                      left: 20,\r\n                      bottom: 5,\r\n                    }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <YAxis tickFormatter={DataFormater}/>\r\n                    <Tooltip/>\r\n                    <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n                  </LineChart>\r\n                  </div>\r\n                ),\r\n              });\r\n            }\r\n            else {\r\n              return ({\r\n                graphSellMovement: <div>Loading...</div>,\r\n              });\r\n            }\r\n          }, productSellMovingData);\r\n      };\r\n      \r\n      \r\n\r\n      async fillDataArrayBuyPrice(callback, data){\r\n        await data.then((value) => {\r\n          let graphs = callback(value);\r\n          this.setState({\r\n            graphBuyPrice: graphs.graphBuyPrice,\r\n          });\r\n        }\r\n        );\r\n      };\r\n      async fillDataArrayBuyMoving(callback, data){\r\n        await data.then((value) => {\r\n          let graphs = callback(value);\r\n          this.setState({\r\n            graphBuyMovement: graphs.graphBuyMovement,\r\n          });\r\n        }\r\n        );\r\n      };\r\n      async fillDataArraySellPrice(callback, data){\r\n        await data.then((value) => {\r\n          let graphs = callback(value);\r\n          this.setState({\r\n            graphSellPrice: graphs.graphSellPrice,\r\n          });\r\n        }\r\n        );\r\n      };\r\n      async fillDataArraySellMoving(callback, data){\r\n        await data.then((value) => {\r\n          let graphs = callback(value);\r\n          this.setState({\r\n            graphSellMovement: graphs.graphSellMovement,\r\n          });\r\n        }\r\n        );\r\n      };\r\n    \r\n      getDataForProduct = (product, requestedData) => {\r\n        let database = getDatabase(this.state.app);\r\n    \r\n        console.log(database);\r\n        let data = undefined;\r\n        let dbref = ref(database);\r\n        data = get(child(dbref, \"data/\" + product + \"/\" + requestedData))\r\n          .then((snapshot) => {\r\n            if (snapshot.exists()) {\r\n              return snapshot.val();\r\n            } else {\r\n              console.log(\"No data available\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n        return data;\r\n      };\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <div className={styles.container}>\r\n                    {this.state.graphBuyPrice}\r\n                    {this.state.graphBuyMovement}\r\n                \r\n            </div>\r\n            <div className={styles.container}>\r\n                    {this.state.graphSellPrice}\r\n                    {this.state.graphSellMovement}\r\n                \r\n            </div>\r\n            <Button variant=\"contained\" onClick={this.viewGraphs}>View Graphs</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GraphPage;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./ItemCard.module.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from \"recharts\";\r\nimport { getDatabase, ref, set, get, child } from \"firebase/database\";\r\nimport { paperClasses } from \"@mui/material\";\r\nimport GraphPage from \"./GraphPage\";\r\n\r\nclass ItemCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      datafunc: this.props.databasefunction,\r\n      app: this.props.databaseapp,\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.ItemCard}>\r\n        <div className={styles.ItemCardInfo}>\r\n          <div className={styles.ItemCardTitle}>{this.props.title}</div>\r\n          <div className={styles.ItemCardPrice}>\r\n            {this.props.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\r\n              \" coins per minute (avg)\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ItemCard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./ItemCardGraphs.module.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from \"recharts\";\r\nimport { getDatabase, ref, set, get, child } from \"firebase/database\";\r\nimport { paperClasses } from \"@mui/material\";\r\nimport GraphPage from \"./GraphPage\";\r\n\r\nclass ItemCardGraphs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      datafunc: this.props.databasefunction,\r\n      app: this.props.databaseapp,\r\n      GraphContainer: (\r\n        <GraphPage title={this.props.title} databaseapp={this.props.databaseapp}/>\r\n      ),\r\n      graphBuyPrice: undefined,\r\n      graphSellPrice: undefined,\r\n      graphBuyMovement: undefined,\r\n      graphSellMovement: undefined,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.ItemCard}>\r\n        <div className={styles.ItemCardInfo}>\r\n          <div className={styles.ItemCardTitle}>{this.props.title}</div>\r\n          <div className={styles.ItemCardPrice}>\r\n            {this.props.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\r\n              \" coins per minute (avg)\"}\r\n          </div>\r\n          {this.state.GraphContainer}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ItemCardGraphs;","import React from \"react\";\r\nimport styles from \"./MainPage.module.css\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport LoginStyles from \"./LoginPage.module.css\";\r\nimport ItemCard from \"./ItemCard\";\r\nimport ItemCardGraphs from \"./ItemCardGraphs\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, ref, set, get, child} from \"firebase/database\";\r\nimport GraphPage from \"./GraphPage\";\r\nimport { Button } from \"@mui/material\";\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const firebaseConfig = {\r\n\r\n        apiKey: \"AIzaSyCYmm2l56LkPhB2o6FmakhioBnfHslkq7U\",\r\n      \r\n        authDomain: \"live-bazaar-stats.firebaseapp.com\",\r\n      \r\n        projectId: \"live-bazaar-stats\",\r\n      \r\n        storageBucket: \"live-bazaar-stats.appspot.com\",\r\n      \r\n        messagingSenderId: \"38601534331\",\r\n      \r\n        appId: \"1:38601534331:web:f37873a4cf1d4b65a2abde\",\r\n        dataBaseURL: \"https://live-bazaar-stats-default-rtdb.firebaseio.com/\",\r\n      };      \r\n    this.state = {\r\n      graphPage: [],\r\n      graphsShown: false,\r\n      ApiKey: \"\",\r\n      ErrorMessage: \"\",\r\n      productCards: [],\r\n      app : initializeApp(firebaseConfig),\r\n      data : [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateDatabase();\r\n    this.displayProducts();\r\n    setTimeout(() => {\r\n      this.setCardDataBase();\r\n    }\r\n    , 1000);\r\n    setInterval(() => {\r\n        this.updateDatabase();\r\n    }, 300000);\r\n    setTimeout(() => {\r\n    setInterval(() => {\r\n        this.displayProducts();\r\n    }, 30000);\r\n    }\r\n    , 2000);\r\n    setTimeout(() => {\r\n      setInterval(() => {\r\n      this.setCardDataBase();\r\n      }\r\n      , 30000);\r\n    }\r\n    , 3000);\r\n  }\r\n\r\n\r\n  callFuncs = () => {\r\n    this.displayProducts();\r\n    this.setCardDataBase();\r\n  }\r\n\r\n\r\n  displayProducts = () => {\r\n    let self = this;\r\n        let newProductCards = [];\r\n    fetch(\r\n      \"https://api.hypixel.net/skyblock/bazaar\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data[\"success\"]) {\r\n          let products = data[\"products\"];\r\n          Object.keys(products).forEach(function (i) {\r\n            if (\r\n              products[i][\"buy_summary\"][0] != undefined &&\r\n              products[i][\"sell_summary\"][0] != undefined\r\n            ) {\r\n              let buyPrice = JSON.parse(\r\n                JSON.stringify(products[i][\"buy_summary\"][0][\"pricePerUnit\"])\r\n              );\r\n              let sellPrice = JSON.parse(\r\n                JSON.stringify(products[i][\"sell_summary\"][0][\"pricePerUnit\"])\r\n              );\r\n              let buyMovingWeek = products[i][\"quick_status\"][\"buyMovingWeek\"];\r\n              buyMovingWeek = buyMovingWeek / 7 / 24 / 60;\r\n              let sellMovingWeek =\r\n                products[i][\"quick_status\"][\"sellMovingWeek\"];\r\n              sellMovingWeek = sellMovingWeek / 7 / 24 / 60;\r\n\r\n              let profitPerMinute =\r\n                buyPrice * 0.9875 * Math.min(sellMovingWeek, buyMovingWeek) -\r\n                sellPrice * Math.min(sellMovingWeek, buyMovingWeek);\r\n              profitPerMinute = Math.round(profitPerMinute * 10) / 10;\r\n              newProductCards.push(\r\n                <ItemCardGraphs\r\n                  key={i}\r\n                  title={i}\r\n                  price={profitPerMinute}\r\n                />\r\n              );\r\n            }\r\n          });\r\n          newProductCards.sort(function (a, b) {\r\n            return parseFloat(b.props.price) - parseFloat(a.props.price);\r\n          });\r\n          return newProductCards;\r\n        } else {\r\n          return <p>{this.state.ErrorMessage}</p>;\r\n        }\r\n      })\r\n      .then((data) => {\r\n        this.setState({\r\n          productCards: data,\r\n        });\r\n      });\r\n  };\r\n\r\n    setCardDataBase = () => {\r\n        let cards = [];\r\n      for (let i = 0; i < this.state.productCards.length; i++) {\r\n\r\n        let card = this.state.productCards[i];\r\n        let title = card.props.title;\r\n        let price = card.props.price;\r\n        let databaseapp = this.state.app;\r\n        cards.push(<ItemCardGraphs key={title} title={title} price={price} databaseapp={databaseapp}/>);\r\n        }\r\n        this.setState({\r\n            productCards: cards,\r\n        });\r\n    }\r\n\r\n\r\n  updateDatabase = () => {\r\n    let database = getDatabase(this.state.app);\r\n    let currentTime = new Date();\r\n    let currentTimeString =\r\n        currentTime.getUTCFullYear() +\r\n        \"-\" +\r\n        (currentTime.getUTCMonth() + 1) +\r\n        \"-\" +\r\n        currentTime.getUTCDate() +\r\n        \" \" +\r\n        currentTime.getUTCHours() +\r\n        \":\" +\r\n        currentTime.getUTCMinutes();\r\n    fetch(\r\n      \"https://api.hypixel.net/skyblock/bazaar\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data[\"success\"]) {\r\n          let products = data[\"products\"];\r\n          return products;\r\n        } else {\r\n          console.log(\"Error\");\r\n        }\r\n      }\r\n      ).then((products) => {\r\n        for (let product in products) {\r\n          if (products[product][\"buy_summary\"][0] != undefined && products[product][\"sell_summary\"][0] != undefined) {\r\n            set(ref(database, \"data/\" + product + \"/buyPricePerUnit/\" + currentTimeString), JSON.parse(JSON.stringify(products[product][\"buy_summary\"][0][\"pricePerUnit\"])));\r\n            set(ref(database, \"data/\" + product + \"/sellPricePerUnit/\" + currentTimeString), JSON.parse(JSON.stringify(products[product][\"sell_summary\"][0][\"pricePerUnit\"])));\r\n            set(ref(database, \"data/\" + product + \"/buyMovingWeek/\" + currentTimeString), JSON.parse(JSON.stringify(products[product][\"quick_status\"][\"buyMovingWeek\"])));\r\n            set(ref(database, \"data/\" + product + \"/sellMovingWeek/\" + currentTimeString), JSON.parse(JSON.stringify(products[product][\"quick_status\"][\"sellMovingWeek\"])));\r\n        }\r\n      }\r\n      }\r\n      );\r\n  }\r\n        \r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className={styles.TitleHeader}>\r\n        <h1>Bazaar Page</h1>\r\n        {this.state.graphPage}\r\n        <div className={styles.ProductDisplay}>{this.state.productCards}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import { Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport styles from \"./AuctionCard.module.css\";\r\n\r\nclass AuctionCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        itemInfo: undefined,\r\n    };\r\n  }\r\n\r\n  showMore = () => {\r\n    this.setState({\r\n        itemInfo: (\r\n            <div className={styles.ItemInfo}>\r\n        <div dangerouslySetInnerHTML={{ __html: this.props.itemLore }}></div>\r\n        <Button variant=\"contained\" onClick={() => {navigator.clipboard.writeText(\"/viewauction \" + this.props.uuid)}}>Copy Auction Command</Button>\r\n        <Button variant=\"contained\" onClick={this.hideMore}>Hide</Button>\r\n            </div>\r\n        ),\r\n    });\r\n    }\r\n\r\n    hideMore = () => {\r\n        this.setState({\r\n            itemInfo: undefined,\r\n        });\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.AuctionCard} >\r\n        <p className={styles.ItemName}>{this.props.itemName}</p>\r\n        <p className={styles.ItemPrice}>{this.props.itemPrice.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\r\n        <p className={styles.itemProfit}>{this.props.itemPotentialProfit.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" Potential Profit\"}</p>\r\n        <Button variant=\"contained\" onClick={this.showMore}>Show More...</Button>\r\n        {this.state.itemInfo}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuctionCard;","\r\n    var currId = 0,\r\n        obfuscators = {},\r\n        alreadyParsed = [],\r\n        styleMap = {\r\n            '§0': 'color:#000000',\r\n            '§1': 'color:#0000AA',\r\n            '§2': 'color:#00AA00',\r\n            '§3': 'color:#00AAAA',\r\n            '§4': 'color:#AA0000',\r\n            '§5': 'color:#AA00AA',\r\n            '§6': 'color:#FFAA00',\r\n            '§7': 'color:#AAAAAA',\r\n            '§8': 'color:#555555',\r\n            '§9': 'color:#5555FF',\r\n            '§a': 'color:#55FF55',\r\n            '§b': 'color:#55FFFF',\r\n            '§c': 'color:#FF5555',\r\n            '§d': 'color:#FF55FF',\r\n            '§e': 'color:#FFFF55',\r\n            '§f': 'color:#FFFFFF',\r\n            '§l': 'font-weight:bold',\r\n            '§m': 'text-decoration:line-through',\r\n            '§n': 'text-decoration:underline',\r\n            '§o': 'font-style:italic'\r\n        };\r\n\r\n    function obfuscate(elem, string) {\r\n        var multiMagic,\r\n            currNode,\r\n            listLen,\r\n            nodeI;\r\n\r\n        function randInt(min, max) {\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        }\r\n\r\n        function replaceRand(string, i) {\r\n            var randChar = String.fromCharCode(randInt(64, 95));\r\n            return string.substr(0, i) + randChar + string.substr(i + 1, string.length);\r\n        }\r\n\r\n        function initMagic(el, str) {\r\n            var i = 0,\r\n                obsStr = str || el.innerHTML,\r\n                strLen = obsStr.length;\r\n            if(!strLen) return;\r\n            obfuscators[currId].push(\r\n                window.setInterval(function () {\r\n                    if (i >= strLen) i = 0;\r\n                    obsStr = replaceRand(obsStr, i);\r\n                    el.innerHTML = obsStr;\r\n                    i++;\r\n                }, 0)\r\n            );\r\n        }\r\n\r\n        if (string.indexOf('<br>') > -1) {\r\n            elem.innerHTML = string;\r\n            listLen = elem.childNodes.length;\r\n            for (nodeI = 0; nodeI < listLen; nodeI++) {\r\n                currNode = elem.childNodes[nodeI];\r\n                if (currNode.nodeType === 3) {\r\n                    multiMagic = document.createElement('span');\r\n                    multiMagic.innerHTML = currNode.nodeValue;\r\n                    elem.replaceChild(multiMagic, currNode);\r\n                    initMagic(multiMagic);\r\n                }\r\n            }\r\n        } else {\r\n            initMagic(elem, string);\r\n        }\r\n    }\r\n\r\n    function applyCode(string, codes) {\r\n        var elem = document.createElement('span'),\r\n            obfuscated = false;\r\n\r\n        string = string.replace(/\\x00/g, '');\r\n\r\n        codes.forEach(function (code) {\r\n            elem.style.cssText += styleMap[code] + ';';\r\n            if (code === '§k') {\r\n                obfuscate(elem, string);\r\n                obfuscated = true;\r\n            }\r\n        });\r\n\r\n        if (!obfuscated) elem.innerHTML = string;\r\n\r\n        return elem;\r\n    }\r\n\r\n    function parseStyle(string) {\r\n        var finalPre = document.createElement('pre'),\r\n            codes = string.match(/§.{1}/g) || [],\r\n            codesLen = codes.length,\r\n            indexes = [],\r\n            indexDelta,\r\n            apply = [],\r\n            strSlice,\r\n            i;\r\n\r\n        if (!obfuscators[currId]) obfuscators[currId] = [];\r\n\r\n        string = string.replace(/\\n|\\\\n/g, '<br>');\r\n\r\n        for (i = 0; i < codesLen; i++) {\r\n            indexes.push(string.indexOf(codes[i]));\r\n            string = string.replace(codes[i], '\\x00\\x00');\r\n        }\r\n\r\n        if (indexes[0] !== 0) {\r\n            finalPre.appendChild(applyCode(string.substring(0, indexes[0]), []));\r\n        }\r\n\r\n        for (i = 0; i < codesLen; i++) {\r\n            indexDelta = indexes[i + 1] - indexes[i];\r\n            if (indexDelta === 2) {\r\n                while (indexDelta === 2) {\r\n                    apply.push(codes[i]);\r\n                    i++;\r\n                    indexDelta = indexes[i + 1] - indexes[i];\r\n                }\r\n                apply.push(codes[i]);\r\n            } else {\r\n                apply.push(codes[i]);\r\n            }\r\n            if (apply.lastIndexOf('§r') > -1) {\r\n                apply = apply.slice(apply.lastIndexOf('§r') + 1);\r\n            }\r\n            strSlice = string.substring(indexes[i], indexes[i + 1]);\r\n            finalPre.appendChild(applyCode(strSlice, apply));\r\n        }\r\n\r\n        return finalPre;\r\n    }\r\n\r\n    function clearObfuscators(id) {\r\n        obfuscators[id].forEach(function (interval) {\r\n            clearInterval(interval);\r\n        });\r\n        alreadyParsed[id] = [];\r\n        obfuscators[id] = [];\r\n    }\r\n\r\n    window.mineParse = function initParser(input) {\r\n        var parsed,\r\n            i = currId;\r\n        if (i > 0) {\r\n            while (i--) {\r\n                if (alreadyParsed[i].nodeType) {\r\n                    if (!document.contains(alreadyParsed[i])) {\r\n                        clearObfuscators(i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parsed = parseStyle(input);\r\n        alreadyParsed.push(parsed);\r\n        currId++;\r\n        return {\r\n            parsed: parsed,\r\n            raw: parsed.innerHTML\r\n        };\r\n    };\r\n\r\n    export default window.mineParse;\r\n","import React from \"react\";\r\nimport styles from \"./AuctionPage.module.css\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport AuctionCard from \"./AuctionCard\";\r\nimport mineParse from \"./scripts/ColorCodeConverter\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, ref, set, get, child } from \"firebase/database\";\r\n\r\nclass AuctionPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const firebaseConfig = {\r\n      apiKey: \"AIzaSyCYmm2l56LkPhB2o6FmakhioBnfHslkq7U\",\r\n\r\n      authDomain: \"live-bazaar-stats.firebaseapp.com\",\r\n\r\n      projectId: \"live-bazaar-stats\",\r\n\r\n      storageBucket: \"live-bazaar-stats.appspot.com\",\r\n\r\n      messagingSenderId: \"38601534331\",\r\n\r\n      appId: \"1:38601534331:web:f37873a4cf1d4b65a2abde\",\r\n      dataBaseURL: \"https://live-bazaar-stats-default-rtdb.firebaseio.com/\",\r\n    };\r\n    this.state = {\r\n      auctionCards: [],\r\n      app: initializeApp(firebaseConfig),\r\n      LoginPage: <LoginPage handleSubmitClick={this.submitClick} />,\r\n      ApiKey: \"\",\r\n      CurrentEnchantPrices: [],\r\n      EnchantNames: [\r\n        \"Angler\",\r\n        \"Aqua Affinity\",\r\n        \"Bane of Arthropods\",\r\n        \"Bank\",\r\n        \"Big Brain\",\r\n        \"Blast Protection\",\r\n        \"Blessing\",\r\n        \"Caster\",\r\n        \"Chance\",\r\n        \"Charm\",\r\n        \"Chimera\",\r\n        \"Cleave\",\r\n        \"Combo\",\r\n        \"Compact\",\r\n        \"Corruption\",\r\n        \"Counter-Strike\",\r\n        \"Critical\",\r\n        \"Cubism\",\r\n        \"Cultivating\",\r\n        \"Delicate\",\r\n        \"Depth Strider\",\r\n        \"Dragon Hunter\",\r\n        \"Dragon Tracer\",\r\n        \"Duplex\",\r\n        \"Efficiency\",\r\n        \"Ender Slayer\",\r\n        \"Execute\",\r\n        \"Experience\",\r\n        \"Expertise\",\r\n        \"Fatal Tempo\",\r\n        \"Feather Falling\",\r\n        \"Fire Aspect\",\r\n        \"Fire Protection\",\r\n        \"First Strike\",\r\n        \"Flame\",\r\n        \"Flash\",\r\n        \"Fortune\",\r\n        \"Frail\",\r\n        \"Frost Walker\",\r\n        \"Giant Killer\",\r\n        \"Growth\",\r\n        \"Harvesting\",\r\n        \"Impaling\",\r\n        \"Inferno\",\r\n        \"Infinite Quiver\",\r\n        \"Knockback\",\r\n        \"Last Stand\",\r\n        \"Legion\",\r\n        \"Lethality\",\r\n        \"Life Steal\",\r\n        \"Looting\",\r\n        \"Luck\",\r\n        \"Luck of the Sea\",\r\n        \"Lure\",\r\n        \"Mana Steal\",\r\n        \"Magnet\",\r\n        \"No Pain No Gain\",\r\n        \"One For All\",\r\n        \"Overload\",\r\n        \"Piercing\",\r\n        \"Power\",\r\n        \"Pristine\",\r\n        \"Projectile Protection\",\r\n        \"Prosecute\",\r\n        \"Protection\",\r\n        \"Punch\",\r\n        \"Rainbow\",\r\n        \"Rejuvenate\",\r\n        \"Rend\",\r\n        \"Replenish\",\r\n        \"Respiration\",\r\n        \"Respite\",\r\n        \"Scavenger\",\r\n        \"Sharpness\",\r\n        \"Silk Touch\",\r\n        \"Smelting Touch\",\r\n        \"Smarty Pants\",\r\n        \"Smite\",\r\n        \"Snipe\",\r\n        \"Soul Eater\",\r\n        \"Spiked Hook\",\r\n        \"Sugar Rush\",\r\n        \"Swarm\",\r\n        \"Syphon\",\r\n        \"Thorns\",\r\n        \"Thunderbolt\",\r\n        \"Thunderlord\",\r\n        \"Titan Killer\",\r\n        \"Triple Strike\",\r\n        \"True Protection\",\r\n        \"Turbo-Wheat\",\r\n        \"Turbo-Carrot\",\r\n        \"Turbo-Potato\",\r\n        \"Turbo-Pumpkin\",\r\n        \"Turbo-Melon\",\r\n        \"Turbo-Mushrooms\",\r\n        \"Turbo-Cocoa\",\r\n        \"Turbo-Cactus\",\r\n        \"Turbo-Cane\",\r\n        \"Turbo-Warts\",\r\n        \"Ultimate Jerry\",\r\n        \"Ultimate Wise\",\r\n        \"Vampirism\",\r\n        \"Venomous\",\r\n        \"Vicious\",\r\n        \"Wisdom\",\r\n      ],\r\n    };\r\n  }\r\n\r\n  submitClick = () => {\r\n    this.setState({\r\n      ApiKey: document.getElementById(\"ApiKey\").value,\r\n    }, this.handleSubmitClick);\r\n  };\r\n\r\n  handleSubmitClick = () => {\r\n    if (this.state.ApiKey === \"\") {\r\n      this.setState({\r\n        LoginPage: <LoginPage handleSubmitClick={this.submitClick} />,\r\n      });\r\n    } else {\r\n      fetch(`https://api.hypixel.net/skyblock/news?key=${this.state.ApiKey}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data[\"success\"] === true) {\r\n      this.setState({\r\n        LoginPage: undefined,\r\n      });\r\n      this.updateDatabase();\r\n      setInterval(() => {\r\n        this.updateDatabase();\r\n      }, 600000);\r\n      setTimeout(() => {\r\n          this.displayAuctionCards();\r\n          setInterval(() => {\r\n            this.displayAuctionCards();\r\n        }, 30000);\r\n        }, 2000);\r\n    }\r\n    else {\r\n      this.setState({\r\n        LoginPage: <LoginPage handleSubmitClick={this.submitClick} />,\r\n      });\r\n    }\r\n  });\r\n  }\r\n}\r\n\r\n  displayAuctionCards = () => {\r\n    let database = getDatabase(this.state.app);\r\n    let auctionCards = [];\r\n    let enchantNames = this.state.EnchantNames;\r\n    let self = this;\r\n    fetch(`https://api.hypixel.net/skyblock/auctions`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let auctions = data[\"auctions\"];\r\n        for (let i = 0; i < auctions.length; i++) {\r\n          let auction = auctions[i];\r\n          if (auction !== undefined) {\r\n          let itemLore = auction[\"item_lore\"];\r\n          let itemLoreEncoded = mineParse(itemLore);\r\n          let uuid = auction[\"uuid\"];\r\n          let itemName = auction[\"item_name\"];\r\n          let isBin = auction[\"bin\"];\r\n          let price = auction[\"starting_bid\"];\r\n          let rarity = auction[\"tier\"];\r\n          if (isBin){\r\n          let enchantments = [];\r\n          for (let j = 0; j < enchantNames.length; j++) {\r\n            let enchantment = enchantNames[j];\r\n            if (itemLore.includes(enchantment)) {\r\n              let enchantmentLevel = itemLore.substring(\r\n                itemLore.indexOf(enchantment) + enchantment.length + 1,\r\n                itemLore.indexOf(enchantment) + enchantment.length + 4\r\n              );\r\n              enchantmentLevel = enchantmentLevel.split(\", \")[0];\r\n              enchantmentLevel = enchantmentLevel.replace(/\\n/g, \"\");\r\n              if (enchantmentLevel.includes(\"§\")) {\r\n                if (enchantmentLevel.split(\"§\")[0].replace(/\\s/g, \"\") === \"\") {\r\n                  enchantmentLevel = enchantmentLevel.split(\"§\")[1].substring(1);\r\n                }\r\n                else{\r\n                enchantmentLevel = enchantmentLevel.split(\"§\")[0];\r\n                }\r\n              }\r\n              enchantments.push(enchantment + \" \" + enchantmentLevel);\r\n            }\r\n          }\r\n          let averagePriceEnchantments = 0;\r\n          let dbref = ref(database);\r\n          try{\r\n          for (let j = 0; j < enchantments.length; j++) {\r\n            let enchantment = enchantments[j];\r\n            get(child(dbref, \"Books/\" + enchantment)).then(function(snapshot) {\r\n              let bookData = snapshot.val();\r\n              if (bookData !== null) {\r\n                averagePriceEnchantments += bookData[\"averagePrice\"];\r\n              }\r\n            });\r\n          }\r\n          let averagePriceItemName = 0;\r\n          get(child(dbref, \"Items/\" + itemName + rarity)).then(function(snapshot) {\r\n            let itemData = snapshot.val();\r\n            if (itemData !== null) {\r\n              averagePriceItemName = itemData[\"averagePrice\"];\r\n              let tax = averagePriceItemName * 0.01;\r\n                        if (averagePriceItemName > 1000000) {\r\n                            tax += averagePriceItemName * 0.01;\r\n                        }\r\n                        averagePriceItemName -= tax;\r\n              let averagePrice = averagePriceItemName + averagePriceEnchantments;\r\n          let potentialProfit = averagePrice - price;\r\n          auctionCards.push(\r\n            <AuctionCard\r\n              key={uuid}\r\n              itemName={itemName}\r\n              itemLore={itemLoreEncoded.raw}\r\n              itemPrice={price.toString()}\r\n              itemPotentialProfit={(Math.round(potentialProfit * 10) / 10).toString()}\r\n              uuid={uuid}\r\n            />\r\n          );\r\n          auctionCards.sort(function(a, b) {\r\n            return b.props.itemPotentialProfit - a.props.itemPotentialProfit;\r\n          }\r\n          );\r\n          self.setState({\r\n            auctionCards: auctionCards,\r\n          });\r\n            }\r\n          });\r\n          \r\n          }catch(e){\r\n            console.log(e);\r\n          }\r\n        }\r\n      }\r\n    }\r\n      });\r\n  };\r\n\r\n  updateDatabase = () => {\r\n    let database = getDatabase(this.state.app);\r\n    let self = this;\r\n    fetch(\"https://api.hypixel.net/skyblock/auctions_ended\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data[\"success\"]) {\r\n          let auctions = data[\"auctions\"];\r\n          let apikey = this.state.ApiKey;\r\n          let EnchantNames = this.state.EnchantNames;\r\n          console.log(\"Please wait \" + auctions.length * 0.75 + \" seconds\");\r\n          let index = 0;\r\n          (function myLoop(i) {\r\n            setTimeout(function() {\r\n              let auction = auctions[index];\r\n              if (auction !== undefined) {\r\n              let uuid = auction[\"auction_id\"];\r\n              let isBin = auction[\"bin\"];\r\n              if (isBin) {\r\n                fetch(\r\n                  `https://api.hypixel.net/skyblock/auction?uuid=${uuid}&key=${apikey}`\r\n                )\r\n                  .then((response) => response.json())\r\n                  .then((data) => {\r\n                    try{\r\n                    let auction = data[\"auctions\"][0];\r\n                    let itemLore = auction[\"item_lore\"];\r\n                    let itemName = auction[\"item_name\"];\r\n                    let enchantments = [];\r\n                    for (let i = 0; i < EnchantNames.length; i++) {\r\n                      let enchantment = EnchantNames[i];\r\n                      if (itemLore.includes(enchantment)) {\r\n                        let enchantmentLevel = itemLore.substring(\r\n                          itemLore.indexOf(enchantment) +\r\n                            enchantment.length +\r\n                            1,\r\n                          itemLore.indexOf(enchantment) + enchantment.length + 4\r\n                        );\r\n                        enchantmentLevel = enchantmentLevel.split(\", \")[0];\r\n                        enchantmentLevel = enchantmentLevel.replace(/\\n/g, \"\");\r\n                        if (enchantmentLevel.includes(\"§\")) {\r\n                          enchantmentLevel = enchantmentLevel.split(\"§\")[0];\r\n                        }\r\n                        enchantments.push(enchantment + \" \" + enchantmentLevel);\r\n                      }\r\n                    }\r\n                    if (\r\n                      itemName === \"Enchanted Book\" &&\r\n                      enchantments.length === 1\r\n                    ) {\r\n                      let databaseRef = ref(\r\n                        database,\r\n                        \"Books/\" + enchantments[0]\r\n                      );\r\n                      let dbref = ref(database);\r\n                      get(child(dbref, \"Books/\" + enchantments[0])).then(\r\n                        function(snapshot) {\r\n                          let bookData = snapshot.val();\r\n                          \r\n                          if (bookData === null) {\r\n                            bookData = {\r\n                              prices: [auction[\"highest_bid_amount\"]],\r\n                              averagePrice: auction[\"highest_bid_amount\"],\r\n                            };\r\n                          } else {\r\n                            if (bookData[\"prices\"].length < 5) {\r\n                            bookData[\"prices\"].push(\r\n                              auction[\"highest_bid_amount\"]\r\n                            );\r\n                            bookData[\"averagePrice\"] =\r\n                              bookData[\"prices\"].reduce((a, b) => a + b, 0) /\r\n                              bookData[\"prices\"].length;\r\n                          }\r\n                          else{\r\n                            if (auction[\"highest_bid_amount\"] > bookData[\"averagePrice\"] * 1.5 || auction[\"highest_bid_amount\"] < bookData[\"averagePrice\"] * 0.5) {\r\n                              bookData[\"prices\"].push(\r\n                                auction[\"highest_bid_amount\"]\r\n                              );\r\n                              bookData[\"averagePrice\"] =\r\n                                bookData[\"prices\"].reduce((a, b) => a + b, 0) /\r\n                                bookData[\"prices\"].length;\r\n                            }\r\n                          }\r\n                        }\r\n                          set(databaseRef, bookData);\r\n                        }\r\n                      );\r\n                    }\r\n                    \r\n                    else if (itemName !== \"Enchanted Book\") {\r\n                      let databaseRef = ref(\r\n                        database,\r\n                        \"Items/\" + itemName + auction[\"tier\"]\r\n                      );\r\n                      let dbref = ref(database);\r\n                      let bookDatas = [];\r\n                      get(\r\n                        child(dbref, \"Items/\" + itemName + auction[\"tier\"])\r\n                      ).then(function(snapshot) { \r\n                        let price = 0;\r\n                        if (enchantments.length > 0) {\r\n                          let dbref = ref(database);\r\n                          for (let i = 0; i < enchantments.length; i++) {\r\n                      get(child(dbref, \"Books/\" + enchantments[i])).then(\r\n                        function(snapshot) {\r\n                          let bookData = snapshot.val();\r\n                          if (bookData !== null) {\r\n                            bookDatas.push(bookData);\r\n                            self.setState({\r\n                              CurrentEnchantPrices: bookDatas,\r\n                            });\r\n                          }\r\n                        }\r\n                      );\r\n                          }\r\n                        let allPricesEnchants = self.state.CurrentEnchantPrices.map(({averagePrice}) => averagePrice);\r\n                        console.log(allPricesEnchants);\r\n                        let enchantsPrice = allPricesEnchants.reduce((a, b) => a + b, 0);\r\n                        console.log(enchantsPrice);\r\n                        price = auction[\"highest_bid_amount\"] - enchantsPrice;\r\n                        }\r\n                        else{\r\n                          price = auction[\"highest_bid_amount\"];\r\n                        }\r\n                        let itemData = snapshot.val();\r\n                        if (itemData === null) {\r\n                          itemData = {\r\n                            prices: [price],\r\n                            averagePrice: price,\r\n                          };\r\n                        } else {\r\n                          if (itemData[\"prices\"].length < 5) {\r\n                          itemData[\"prices\"].push(price);\r\n                          itemData[\"averagePrice\"] =\r\n                            itemData[\"prices\"].reduce((a, b) => a + b, 0) /\r\n                            itemData[\"prices\"].length;\r\n                        }\r\n                        else{\r\n                          if (price > itemData[\"averagePrice\"] * 1.5 || price < itemData[\"averagePrice\"] * 0.5) {\r\n                            itemData[\"prices\"].push(price);\r\n                            itemData[\"averagePrice\"] =\r\n                              itemData[\"prices\"].reduce((a, b) => a + b, 0) /\r\n                              itemData[\"prices\"].length;\r\n                          }\r\n                        }\r\n                      }\r\n                        set(databaseRef, itemData);\r\n                      });\r\n                    }\r\n                  }catch(e){console.log(e);} })\r\n                  .catch((error) => console.log(error));\r\n              }\r\n            }\r\n              index++;\r\n              if (--i) myLoop(i);\r\n            }, 750);\r\n          })(Object.keys(auctions).length);\r\n        } else {\r\n          console.log(\"Error\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  fillEnchantPricesArray = (callback, enchantments) => {\r\n    return callback(enchantments);\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Auction Page</h1>\r\n        {this.state.LoginPage}\r\n        <div className={styles.AuctionCards}>{this.state.auctionCards}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuctionPage;\r\n","import LoginPage from \"./components/LoginPage\";\nimport React from \"react\";\nimport MainPage from \"./components/MainPage\";\nimport AuctionPage from \"./components/AuctionPage\";\nimport { Button } from \"@mui/material\";\nimport styles from \"./App.module.css\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: undefined,\n      buttons: (\n        <div>\n          <Button variant=\"contained\" onClick={this.activateAuction}>Auction Stats</Button>\n          <Button variant=\"contained\" onClick={this.activateBazaar}>Bazaar Stats</Button>\n        </div>\n      ),\n  }\n}\n\n  activateBazaar = () => {\n    this.setState({\n      page: (\n        <MainPage />\n      ),\n      buttons: undefined,\n    });\n  }\n\n  activateAuction = () => {\n    this.setState({\n      page: (\n        <AuctionPage />\n      ),\n      buttons: undefined,\n    });\n  };\n\n  render() {\n    return (\n      <div className={styles.App}>\n        <h1 className={styles.appTitle}>Live Hypixel Stats</h1>\n          {this.state.buttons}\n          {this.state.page}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuctionCard\":\"AuctionCard_AuctionCard__2NKi1\",\"ItemName\":\"AuctionCard_ItemName__2G8M7\",\"ItemPrice\":\"AuctionCard_ItemPrice__1GAMA\",\"ItemInfo\":\"AuctionCard_ItemInfo__1klQO\",\"itemProfit\":\"AuctionCard_itemProfit__3UbfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemCardInfo\":\"ItemCard_ItemCardInfo__1VWSK\",\"ItemCardTitle\":\"ItemCard_ItemCardTitle__3bY97\",\"ItemCardPrice\":\"ItemCard_ItemCardPrice__y1Vzh\",\"GraphContainer\":\"ItemCard_GraphContainer__3SzST\",\"graph\":\"ItemCard_graph__e-KOR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemCardInfo\":\"ItemCardGraphs_ItemCardInfo__qH96R\",\"ItemCardTitle\":\"ItemCardGraphs_ItemCardTitle__2qLtE\",\"ItemCardPrice\":\"ItemCardGraphs_ItemCardPrice__1H3Eh\",\"GraphContainer\":\"ItemCardGraphs_GraphContainer__2nzlP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginPage\":\"LoginPage_LoginPage__emfhd\",\"KeyPrompt\":\"LoginPage_KeyPrompt__3mSiB\"};"],"sourceRoot":""}