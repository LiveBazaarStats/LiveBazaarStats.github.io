{"version":3,"sources":["components/MainPage.module.css","components/KeyInput.module.css","components/GraphPage.module.css","components/KeyInput.js","components/LoginPage.js","components/GraphPage.js","components/ItemCard.js","components/ItemCardGraphs.js","components/MainPage.js","App.js","reportWebVitals.js","index.js","components/ItemCard.module.css","components/ItemCardGraphs.module.css","components/LoginPage.module.css"],"names":["module","exports","TitleHeader","ProductDisplay","keyinput","container","title","miniContainer","graph","KeyInput","react_default","a","createElement","type","className","styles","React","Component","GraphPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","viewGraphs","DataFormater","number","toString","productBuyData","await_response","productBuyMovingData","productSellData","productSellMovingData","productBuyDataArray","productBuyMovingDataArray","productSellDataArray","productSellMovingDataArray","fillDataArrayBuyPrice","data","keys","forEach","key","push","time","value","undefined","graphBuyPrice","LineChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","YAxis","tickFormatter","Tooltip","Line","dataKey","stroke","fillDataArrayBuyMoving","graphBuyMovement","fillDataArraySellPrice","graphSellPrice","fillDataArraySellMoving","graphSellMovement","getDataForProduct","product","requestedData","database","getDatabase","state","app","console","log","dbref","ref","get","child","then","snapshot","exists","val","catch","error","databaseapp","requested_data","response","callback","graphs","_this2","setState","_this3","_this4","_this5","Button","variant","onClick","ItemCardGraphs","datafunc","databasefunction","GraphContainer","components_GraphPage","ItemCard","ItemCardInfo","ItemCardTitle","ItemCardPrice","price","replace","MainPage","callFuncs","displayProducts","setCardDataBase","assertThisInitialized","newProductCards","fetch","json","products","i","buyPrice","JSON","parse","stringify","sellPrice","buyMovingWeek","sellMovingWeek","profitPerMinute","Math","min","round","components_ItemCardGraphs","sort","b","parseFloat","ErrorMessage","productCards","cards","length","card","updateDatabase","currentTime","Date","currentTimeString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","set","graphPage","graphsShown","ApiKey","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","dataBaseURL","setTimeout","setInterval","App","components_MainPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","LoginPage","KeyPrompt"],"mappings":"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","file":"static/js/main.1100180b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleHeader\":\"MainPage_TitleHeader__HyfYp\",\"ProductDisplay\":\"MainPage_ProductDisplay__zy-Vw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyinput\":\"KeyInput_keyinput__TGvsj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GraphPage_container__3UzYH\",\"title\":\"GraphPage_title__2E880\",\"miniContainer\":\"GraphPage_miniContainer__2wZ1h\",\"graph\":\"GraphPage_graph__3_o_D\"};","import React from \"react\";\r\nimport styles from './KeyInput.module.css';\r\n\r\nfunction KeyInput(){\r\n    return (\r\n        <div>\r\n            <input type=\"text\" className={styles.KeyInput}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KeyInput;","import KeyInput from \"./KeyInput\";\r\nimport Button from \"@mui/material/Button\";\r\nimport React from \"react\";\r\nimport styles from \"./LoginPage.module.css\";\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.LoginPage}>\r\n        <p className={styles.KeyPrompt}>Please enter your API Key.</p>\r\n        <KeyInput />\r\n        <Button variant=\"contained\" onClick={this.props.handleSubmitClick}>Submit</Button>\r\n        <p className=\"error_message\">{this.props.errorMessage}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from \"recharts\";\r\nimport { getDatabase, ref, set, get, child } from \"firebase/database\";\r\nimport React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport styles from \"./GraphPage.module.css\";\r\n\r\nclass GraphPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            app: this.props.databaseapp,\r\n            graphBuyPrice: undefined,\r\n            graphSellPrice: undefined,\r\n            graphBuyMovement: undefined,\r\n            graphSellMovement: undefined,\r\n        }\r\n    }\r\n\r\n    async await_response(product, requested_data) {\r\n        let response = await this.getDataForProduct(product, requested_data);\r\n        return response;\r\n      }\r\n    \r\n    \r\n      viewGraphs = () => {\r\n        const DataFormater = (number) => {\r\n            if(number > 1000000000){\r\n              return (number/1000000000).toString() + 'B';\r\n            }else if(number > 1000000){\r\n              return (number/1000000).toString() + 'M';\r\n            }else if(number > 1000){\r\n              return (number/1000).toString() + 'K';\r\n            }else{\r\n              return number.toString();\r\n            }\r\n          }\r\n        let productBuyData = this.await_response(\r\n          this.props.title,\r\n          \"buyPricePerUnit\"\r\n        );\r\n        let productBuyMovingData = this.await_response(\r\n            this.props.title,\r\n            \"buyMovingWeek\"\r\n        );\r\n        let productSellData = this.await_response(\r\n            this.props.title,\r\n            \"sellPricePerUnit\"\r\n        );\r\n        let productSellMovingData = this.await_response(\r\n            this.props.title,\r\n            \"sellMovingWeek\"\r\n        );\r\n    \r\n        let productBuyDataArray = [];\r\n        let productBuyMovingDataArray = [];\r\n        let productSellDataArray = [];\r\n        let productSellMovingDataArray = [];\r\n        this.fillDataArrayBuyPrice(function (data) {\r\n          Object.keys(data).forEach((key) => {\r\n            productBuyDataArray.push({\r\n              time: key,\r\n              value: data[key],\r\n            });\r\n          }\r\n          );\r\n          if (productBuyDataArray !== undefined) {\r\n            \r\n            return ({\r\n              graphBuyPrice: (\r\n                <div className={styles.miniContainer}>\r\n                <p className={styles.title}>Buy Price</p>\r\n                <LineChart\r\n                  width={500}\r\n                  height={250}\r\n                  className={styles.graph}\r\n                  data={productBuyDataArray}\r\n                  margin={{\r\n                    top: 15,\r\n                    right: 30,\r\n                    left: 20,\r\n                    bottom: 5,\r\n                  }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <YAxis tickFormatter={DataFormater}/>\r\n                  <Tooltip/>\r\n                  <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n                </LineChart>\r\n                </div>\r\n              ),\r\n            });\r\n          }\r\n          else {\r\n            return ({\r\n              graphBuyPrice: <div>Loading...</div>,\r\n            });\r\n          }\r\n        }, productBuyData);\r\n\r\n        this.fillDataArrayBuyMoving(function (data) {\r\n            Object.keys(data).forEach((key) => {\r\n              productBuyMovingDataArray.push({\r\n                time: key,\r\n                value: data[key],\r\n              });\r\n            }\r\n            );\r\n            if (productBuyMovingDataArray !== undefined) {\r\n              \r\n              return ({\r\n                graphBuyMovement: (\r\n                    <div className={styles.miniContainer}>\r\n                <p className={styles.title}>Buy Movement</p>\r\n                  <LineChart\r\n                    width={500}\r\n                    height={250}\r\n                    className={styles.graph}\r\n                    data={productBuyMovingDataArray}\r\n                    margin={{\r\n                      top: 15,\r\n                      right: 30,\r\n                      left: 20,\r\n                      bottom: 5,\r\n                    }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <YAxis tickFormatter={DataFormater}/>\r\n                    <Tooltip/>\r\n                    <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n                  </LineChart>\r\n                  </div>\r\n                ),\r\n              });\r\n            }\r\n            else {\r\n              return ({\r\n                graphBuyMovement: <div>Loading...</div>,\r\n              });\r\n            }\r\n          }, productBuyMovingData);\r\n        \r\n          this.fillDataArraySellPrice(function (data) {\r\n            Object.keys(data).forEach((key) => {\r\n              productSellDataArray.push({\r\n                time: key,\r\n                value: data[key],\r\n              });\r\n            }\r\n            );\r\n            if (productSellDataArray !== undefined) {\r\n              \r\n              return ({\r\n                graphSellPrice: (\r\n                    <div className={styles.miniContainer}>\r\n                <p className={styles.title}>Sell Price</p>\r\n                  <LineChart\r\n                    width={500}\r\n                    height={250}\r\n                    className={styles.graph}\r\n                    data={productSellDataArray}\r\n                    margin={{\r\n                      top: 15,\r\n                      right: 30,\r\n                      left: 20,\r\n                      bottom: 5,\r\n                    }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <YAxis tickFormatter={DataFormater}/>\r\n                    <Tooltip/>\r\n                    <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n                  </LineChart>\r\n                    </div>\r\n                ),\r\n              });\r\n            }\r\n            else {\r\n              return ({\r\n                graphSellPrice: <div>Loading...</div>,\r\n              });\r\n            }\r\n          }, productSellData);\r\n          \r\n          this.fillDataArraySellMoving(function (data) {\r\n            Object.keys(data).forEach((key) => {\r\n              productSellMovingDataArray.push({\r\n                time: key,\r\n                value: data[key],\r\n              });\r\n            }\r\n            );\r\n            if (productSellMovingDataArray !== undefined) {\r\n              \r\n              return ({\r\n                graphSellMovement: (\r\n                    <div className={styles.miniContainer}>\r\n                    <p className={styles.title}>Sell Movement</p>\r\n                  <LineChart\r\n                    width={500}\r\n                    height={250}\r\n                    className={styles.graph}\r\n                    data={productSellMovingDataArray}\r\n                    margin={{\r\n                      top: 15,\r\n                      right: 30,\r\n                      left: 20,\r\n                      bottom: 5,\r\n                    }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <YAxis tickFormatter={DataFormater}/>\r\n                    <Tooltip/>\r\n                    <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n                  </LineChart>\r\n                  </div>\r\n                ),\r\n              });\r\n            }\r\n            else {\r\n              return ({\r\n                graphSellMovement: <div>Loading...</div>,\r\n              });\r\n            }\r\n          }, productSellMovingData);\r\n      };\r\n      \r\n      \r\n\r\n      async fillDataArrayBuyPrice(callback, data){\r\n        await data.then((value) => {\r\n          let graphs = callback(value);\r\n          this.setState({\r\n            graphBuyPrice: graphs.graphBuyPrice,\r\n          });\r\n        }\r\n        );\r\n      };\r\n      async fillDataArrayBuyMoving(callback, data){\r\n        await data.then((value) => {\r\n          let graphs = callback(value);\r\n          this.setState({\r\n            graphBuyMovement: graphs.graphBuyMovement,\r\n          });\r\n        }\r\n        );\r\n      };\r\n      async fillDataArraySellPrice(callback, data){\r\n        await data.then((value) => {\r\n          let graphs = callback(value);\r\n          this.setState({\r\n            graphSellPrice: graphs.graphSellPrice,\r\n          });\r\n        }\r\n        );\r\n      };\r\n      async fillDataArraySellMoving(callback, data){\r\n        await data.then((value) => {\r\n          let graphs = callback(value);\r\n          this.setState({\r\n            graphSellMovement: graphs.graphSellMovement,\r\n          });\r\n        }\r\n        );\r\n      };\r\n    \r\n      getDataForProduct = (product, requestedData) => {\r\n        let database = getDatabase(this.state.app);\r\n    \r\n        console.log(database);\r\n        let data = undefined;\r\n        let dbref = ref(database);\r\n        data = get(child(dbref, \"data/\" + product + \"/\" + requestedData))\r\n          .then((snapshot) => {\r\n            if (snapshot.exists()) {\r\n              return snapshot.val();\r\n            } else {\r\n              console.log(\"No data available\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n        return data;\r\n      };\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <div className={styles.container}>\r\n                    {this.state.graphBuyPrice}\r\n                    {this.state.graphBuyMovement}\r\n                \r\n            </div>\r\n            <div className={styles.container}>\r\n                    {this.state.graphSellPrice}\r\n                    {this.state.graphSellMovement}\r\n                \r\n            </div>\r\n            <Button variant=\"contained\" onClick={this.viewGraphs}>View Graphs</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GraphPage;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./ItemCard.module.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from \"recharts\";\r\nimport { getDatabase, ref, set, get, child } from \"firebase/database\";\r\nimport { paperClasses } from \"@mui/material\";\r\nimport GraphPage from \"./GraphPage\";\r\n\r\nclass ItemCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      datafunc: this.props.databasefunction,\r\n      app: this.props.databaseapp,\r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.ItemCard}>\r\n        <div className={styles.ItemCardInfo}>\r\n          <div className={styles.ItemCardTitle}>{this.props.title}</div>\r\n          <div className={styles.ItemCardPrice}>\r\n            {this.props.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\r\n              \" coins per minute (avg)\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ItemCard;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./ItemCardGraphs.module.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from \"recharts\";\r\nimport { getDatabase, ref, set, get, child } from \"firebase/database\";\r\nimport { paperClasses } from \"@mui/material\";\r\nimport GraphPage from \"./GraphPage\";\r\n\r\nclass ItemCardGraphs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      datafunc: this.props.databasefunction,\r\n      app: this.props.databaseapp,\r\n      GraphContainer: (\r\n        <GraphPage title={this.props.title} databaseapp={this.props.databaseapp}/>\r\n      ),\r\n      graphBuyPrice: undefined,\r\n      graphSellPrice: undefined,\r\n      graphBuyMovement: undefined,\r\n      graphSellMovement: undefined,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.ItemCard}>\r\n        <div className={styles.ItemCardInfo}>\r\n          <div className={styles.ItemCardTitle}>{this.props.title}</div>\r\n          <div className={styles.ItemCardPrice}>\r\n            {this.props.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\r\n              \" coins per minute (avg)\"}\r\n          </div>\r\n          {this.state.GraphContainer}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ItemCardGraphs;","import React from \"react\";\r\nimport styles from \"./MainPage.module.css\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport LoginStyles from \"./LoginPage.module.css\";\r\nimport ItemCard from \"./ItemCard\";\r\nimport ItemCardGraphs from \"./ItemCardGraphs\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, ref, set, get, child} from \"firebase/database\";\r\nimport GraphPage from \"./GraphPage\";\r\nimport { Button } from \"@mui/material\";\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const firebaseConfig = {\r\n\r\n        apiKey: \"AIzaSyCYmm2l56LkPhB2o6FmakhioBnfHslkq7U\",\r\n      \r\n        authDomain: \"live-bazaar-stats.firebaseapp.com\",\r\n      \r\n        projectId: \"live-bazaar-stats\",\r\n      \r\n        storageBucket: \"live-bazaar-stats.appspot.com\",\r\n      \r\n        messagingSenderId: \"38601534331\",\r\n      \r\n        appId: \"1:38601534331:web:f37873a4cf1d4b65a2abde\",\r\n        dataBaseURL: \"https://live-bazaar-stats-default-rtdb.firebaseio.com/\",\r\n      };      \r\n    this.state = {\r\n      graphPage: [],\r\n      graphsShown: false,\r\n      ApiKey: \"\",\r\n      ErrorMessage: \"\",\r\n      productCards: [],\r\n      app : initializeApp(firebaseConfig),\r\n      data : [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateDatabase();\r\n    this.displayProducts();\r\n    setTimeout(() => {\r\n      this.setCardDataBase();\r\n    }\r\n    , 1000);\r\n    setInterval(() => {\r\n        this.updateDatabase();\r\n    }, 300000);\r\n    setTimeout(() => {\r\n    setInterval(() => {\r\n        this.displayProducts();\r\n    }, 30000);\r\n    }\r\n    , 2000);\r\n    setTimeout(() => {\r\n      setInterval(() => {\r\n      this.setCardDataBase();\r\n      }\r\n      , 30000);\r\n    }\r\n    , 3000);\r\n  }\r\n\r\n\r\n  callFuncs = () => {\r\n    this.displayProducts();\r\n    this.setCardDataBase();\r\n  }\r\n\r\n\r\n  displayProducts = () => {\r\n    let self = this;\r\n        let newProductCards = [];\r\n    fetch(\r\n      \"https://api.hypixel.net/skyblock/bazaar\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data[\"success\"]) {\r\n          let products = data[\"products\"];\r\n          Object.keys(products).forEach(function (i) {\r\n            if (\r\n              products[i][\"buy_summary\"][0] != undefined &&\r\n              products[i][\"sell_summary\"][0] != undefined\r\n            ) {\r\n              let buyPrice = JSON.parse(\r\n                JSON.stringify(products[i][\"buy_summary\"][0][\"pricePerUnit\"])\r\n              );\r\n              let sellPrice = JSON.parse(\r\n                JSON.stringify(products[i][\"sell_summary\"][0][\"pricePerUnit\"])\r\n              );\r\n              let buyMovingWeek = products[i][\"quick_status\"][\"buyMovingWeek\"];\r\n              buyMovingWeek = buyMovingWeek / 7 / 24 / 60;\r\n              let sellMovingWeek =\r\n                products[i][\"quick_status\"][\"sellMovingWeek\"];\r\n              sellMovingWeek = sellMovingWeek / 7 / 24 / 60;\r\n\r\n              let profitPerMinute =\r\n                buyPrice * 0.9875 * Math.min(sellMovingWeek, buyMovingWeek) -\r\n                sellPrice * Math.min(sellMovingWeek, buyMovingWeek);\r\n              profitPerMinute = Math.round(profitPerMinute * 10) / 10;\r\n              newProductCards.push(\r\n                <ItemCardGraphs\r\n                  key={i}\r\n                  title={i}\r\n                  price={profitPerMinute}\r\n                />\r\n              );\r\n            }\r\n          });\r\n          newProductCards.sort(function (a, b) {\r\n            return parseFloat(b.props.price) - parseFloat(a.props.price);\r\n          });\r\n          return newProductCards;\r\n        } else {\r\n          return <p>{this.state.ErrorMessage}</p>;\r\n        }\r\n      })\r\n      .then((data) => {\r\n        this.setState({\r\n          productCards: data,\r\n        });\r\n      });\r\n  };\r\n\r\n    setCardDataBase = () => {\r\n        let cards = [];\r\n      for (let i = 0; i < this.state.productCards.length; i++) {\r\n\r\n        let card = this.state.productCards[i];\r\n        let title = card.props.title;\r\n        let price = card.props.price;\r\n        let databaseapp = this.state.app;\r\n        cards.push(<ItemCardGraphs key={title} title={title} price={price} databaseapp={databaseapp}/>);\r\n        }\r\n        this.setState({\r\n            productCards: cards,\r\n        });\r\n    }\r\n\r\n\r\n  updateDatabase = () => {\r\n    let database = getDatabase(this.state.app);\r\n    let currentTime = new Date();\r\n    let currentTimeString =\r\n        currentTime.getUTCFullYear() +\r\n        \"-\" +\r\n        (currentTime.getUTCMonth() + 1) +\r\n        \"-\" +\r\n        currentTime.getUTCDate() +\r\n        \" \" +\r\n        currentTime.getUTCHours() +\r\n        \":\" +\r\n        currentTime.getUTCMinutes();\r\n    fetch(\r\n      \"https://api.hypixel.net/skyblock/bazaar\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data[\"success\"]) {\r\n          let products = data[\"products\"];\r\n          return products;\r\n        } else {\r\n          console.log(\"Error\");\r\n        }\r\n      }\r\n      ).then((products) => {\r\n        for (let product in products) {\r\n          if (products[product][\"buy_summary\"][0] != undefined && products[product][\"sell_summary\"][0] != undefined) {\r\n            set(ref(database, \"data/\" + product + \"/buyPricePerUnit/\" + currentTimeString), JSON.parse(JSON.stringify(products[product][\"buy_summary\"][0][\"pricePerUnit\"])));\r\n            set(ref(database, \"data/\" + product + \"/sellPricePerUnit/\" + currentTimeString), JSON.parse(JSON.stringify(products[product][\"sell_summary\"][0][\"pricePerUnit\"])));\r\n            set(ref(database, \"data/\" + product + \"/buyMovingWeek/\" + currentTimeString), JSON.parse(JSON.stringify(products[product][\"quick_status\"][\"buyMovingWeek\"])));\r\n            set(ref(database, \"data/\" + product + \"/sellMovingWeek/\" + currentTimeString), JSON.parse(JSON.stringify(products[product][\"quick_status\"][\"sellMovingWeek\"])));\r\n        }\r\n      }\r\n      }\r\n      );\r\n  }\r\n        \r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className={styles.TitleHeader}>\r\n        <h1>Live Bazaar Stats</h1>\r\n        {this.state.graphPage}\r\n        <div className={styles.ProductDisplay}>{this.state.productCards}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import LoginPage from \"./components/LoginPage\";\nimport React from \"react\";\nimport MainPage from \"./components/MainPage\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MainPage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemCardInfo\":\"ItemCard_ItemCardInfo__1VWSK\",\"ItemCardTitle\":\"ItemCard_ItemCardTitle__3bY97\",\"ItemCardPrice\":\"ItemCard_ItemCardPrice__y1Vzh\",\"GraphContainer\":\"ItemCard_GraphContainer__3SzST\",\"graph\":\"ItemCard_graph__e-KOR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemCardInfo\":\"ItemCardGraphs_ItemCardInfo__qH96R\",\"ItemCardTitle\":\"ItemCardGraphs_ItemCardTitle__2qLtE\",\"ItemCardPrice\":\"ItemCardGraphs_ItemCardPrice__1H3Eh\",\"GraphContainer\":\"ItemCardGraphs_GraphContainer__2nzlP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginPage\":\"LoginPage_LoginPage__emfhd\",\"KeyPrompt\":\"LoginPage_KeyPrompt__3mSiB\"};"],"sourceRoot":""}